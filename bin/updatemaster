#!/usr/local/bin/zsh

### SET UP NOTIFY ###
if ! command -v notify &> /dev/null; then
    if command -v terminal-notifier &> /dev/null; then
        notify() { terminal-notifier -title "$1" -message "$2" -activate com.googlecode.iterm2; }
    else
        echo "terminal-notifier not found, defaulting to bell. Install terminal-notifier to get the most out of this script."
        notify() { echo '\a'; }
    fi
fi

### HOMEBREW ###
echo "-- Homebrew update/upgrade."
if command -v brew &> /dev/null; then
    brew update;
    brew update > /dev/null;
    outdated="$(brew outdated)"
    outdated_c="$(brew cask outdated --greedy)"

    # Potentially upgrade programs
    if [ ${#outdated} = 0 ]; then
        echo "No programs to update." 
    else
        echo "\nTo update:\n"
        brew outdated;
        notify "Brew: Finished reading updates" "Click to view outdated packages."
        echo -n "Continue? [Y/n]"
        read -sqn CONF

        if [ "$CONF" != "y" ]; then
            echo "\nCancelled brew upgrade."
        else
            echo "\nContinuing with brew upgrade."
            brew upgrade;
        fi 
    fi

    # Potentially upgrade casks
    if [ ${#outdated_c} = 0 ]; then
        echo "No casks to update." 
    else
        echo "\nCasks to update:\n"
        brew cask outdated --greedy;
        notify "Cask: Finished reading updates" "Click to view outdated casks."
        echo -n "Continue? [Y/n]"
        read -sqn CONF

        if [ "$CONF" != "y" ]; then
            echo "\nCancelled cask upgrade."
        else
            echo "\nContinuing with cask upgrade."
            brew cask upgrade --greedy;
        fi 
    fi

    # Final steps & cleanup
    brew cleanup -s;
    brew cask cleanup;
    brew prune;
    brew doctor;
    brew missing;
    notify "Brewed." "All packages have been upgraded.";
else
    echo "brew not found."
    echo "Cannot upgrade Homebrew packages. Please do so manually."
fi

### Mac App Store (MAS) ###
echo "-- MAS update/upgrade."
if command -v mas &> /dev/null; then
    echo "MAS outdated:"
    mas outdated

    echo -n "Continue? [Y/n]"
    read -sqn CONF

    if [ "$CONF" != "y" ]; then
        echo "\nCancelled mas upgrade."
    else
        echo "\nContinuing with mas upgrade."
        mas upgrade;
    fi 
    notify "MAS Updated." "All apps at newest version."
else
    echo "mas not found. Install mas to update App Store apps on the command line."
    echo "Cannot update Mac App Store apps. Please do so manually."
fi

### NPM ###
echo "-- NPM update/upgrade."
if command -v npm &> /dev/null; then
    npm update -g
    notify "NPM Update Finished" "See Terminal for info."
else
    echo "npm not found."
    echo "Cannot update NPM packages. Please do so manually."
fi

### PIP3 ###
echo "-- PIP3 update/upgrade."
if command -v pip3 list &> /dev/null; then
    pip3 list --outdated | cut -d ' ' -f1 | xargs -n1 pip3 install -U
    notify "Pip3 Update Finished" "See Terminal for info."
else
    echo "Cannot upgrade pip3 packages. Please do so manully."
fi

### PIP ###
echo "-- PIP update/upgrade."
if command -v pip list &> /dev/null; then
    pip freeze — local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs pip install -U
    notify "Pip Update Finished" "See Terminal for info."
else
    echo "Cannot upgrade pip packages. Please do so manully."
fi
