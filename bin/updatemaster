#!/usr/local/bin/bash

### SET UP NOTIFY ###
if ! command -v notify &> /dev/null; then
    if command -v terminal-notifier &> /dev/null; then
        notify() { terminal-notifier -title "$1" -message "$2" -activate com.googlecode.iterm2; }
    else
        echo -e "terminal-notifier not found, defaulting to bell. Install terminal-notifier to get the most out of this script."
        notify() { echo -e '\a'; }
    fi
fi

### HOMEBREW ###
echo -e "-- Homebrew update/upgrade."
if command -v brew &> /dev/null; then
    brew update;
    brew update > /dev/null;
    outdated="$(brew outdated)"
    outdated_c="$(brew cask outdated --greedy)"
    echo

    # Potentially upgrade programs
    if [ ${#outdated} = 0 ]; then
        echo -e "No programs to update." 
    else
        echo -e "To update:\n"
        brew outdated;
        notify "Brew: Finished reading updates" "Click to view outdated packages."
        echo; read -sn 1 -p "Continue? [Y/n]" CONF

        case $CONF in
            [yY] )
                echo -e "\nContinuing with brew upgrade."
                brew upgrade;
                ;;
            * )
                echo -e "\nCancelled brew upgrade."
                ;;
        esac
    fi

    # Potentially upgrade casks
    if [ ${#outdated_c} = 0 ]; then
        echo -e "No casks to update." 
    else
        echo -e "Casks to update:"
        brew cask outdated --greedy;
        notify "Cask: Finished reading updates" "Click to view outdated casks."
        read -sn 1 -p "Continue? [Y(es)/n(o)/s(elect)]: " CONF

        case $CONF in
            [Ss] | [Ss]elect )
                echo
                read -p "Which casks would you like to upgrade? " -a CASKS;
                for i in ${CASKS[@]}; do
                    if ! brew cask upgrade $i; then echo -e "Could not upgrade cask $i."; fi
                done 
                ;;
            [Yy] | [Yy]es )
                echo -e "\nContinuing with cask upgrade."
                brew cask upgrade --greedy;
                ;; 
            * )
                echo -e "\nCancelled cask upgrade."
                ;;
        esac
    fi

    # Final steps & cleanup
    brew cleanup -s;
    brew cask cleanup;
    brew prune;
    brew doctor;
    brew missing;
    notify "Brewed." "All packages have been upgraded.";
else
    echo -e "brew not found."
    echo -e "Cannot upgrade Homebrew packages. Please do so manually."
fi

### Mac App Store (MAS) ###
echo -e "\n-- MAS update/upgrade."
if command -v mas &> /dev/null; then
    echo -e "MAS outdated:"
    mas outdated

    read -sn 1 -p "Continue? [Y/n]" CONF

    case $CONF in
        [Yy] )
            echo -e "\nContinuing with mas upgrade."
            mas upgrade;
            ;;

        * )
            echo -e "\nCancelled mas upgrade."
            ;;
    esac
    notify "MAS Updated." "All apps at newest version."
else
    echo -e "\nmas not found. Install mas to update App Store apps on the command line."
    echo -e "\nCannot update Mac App Store apps. Please do so manually."
fi

### NPM ###
echo -e "\n-- NPM update/upgrade."
if command -v npm &> /dev/null; then
    npm update -g
    notify "NPM Update Finished" "See Terminal for info."
else
    echo -e "\nnpm not found."
    echo -e "\nCannot update NPM packages. Please do so manually."
fi

### PIP3 ###
echo -e "\n-- PIP3 update/upgrade."
if command -v pip3 list &> /dev/null; then
    pip3 list --outdated | cut -d ' ' -f1 | xargs -n1 pip3 install -U
    notify "Pip3 Update Finished" "See Terminal for info."
else
    echo -e "\nCannot upgrade pip3 packages. Please do so manully."
fi

### PIP ###
echo -e "-- PIP update/upgrade."
if command -v pip list &> /dev/null; then
    if pip freeze; then
        pip freeze — local | grep -v '^\-e' | cut -d = -f 1 | xargs pip install -U
    else
        echo -e "Cannot upgrade pip packages. Please do so manully."
    fi
    notify "Pip Update Finished" "See Terminal for info."
else
    echo -e "Cannot upgrade pip packages. Please do so manully."
fi
