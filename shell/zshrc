# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
[ -n "$DOTFILES" ] || { echo '$DOTFILES not set' && exit 1; }

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source_if_exists() {
  if [[ -f "$1" ]]; then
    source "$1"
  fi
}

# Options
if [ -n "$VIMRUNTIME" ]; then set -o vi
else set -o emacs
fi
setopt alwaystoend         # On completion, move cursor to end of word
setopt autocd              # If I forget 'cd' before a path
setopt autopushd           # Make cd push old directory onto stack
setopt completeinword      # Completion from both ends of word
setopt extendedhistory     # Save timestamp and duration of commands in histfile
setopt interactivecomments # Allow comments
setopt monitor             # Allow job control
setopt nocaseglob          # Globs should be case insensitive
setopt noflowcontrol       # Disable ^S and ^Q
setopt promptsubst         # Parameter expansion, command subst, arithmetic expansion done in prompt
setopt pushdignoredups     # Don't pushd duplicate directories
setopt pushdminus          # Exchange meanings of + and - on directory stack

# History options
setopt sharehistory        # Import commands from histfile and append typed to histfile
setopt appendhistory       # Append to history
setopt incappendhistory    # Append immediately, not at shell exit
setopt histexpiredupsfirst # When trimming history, remove duplicates first
setopt histignoredups      # Don't save command into history if duplicate of previous
setopt histignorespace     # Don't save command into history if starts with space
setopt histfindnodups      # Ignore duplicates when searching
setopt histreduceblanks    # Remove blank lines from history
setopt histverify          # Show expansion first before executing

# Enable extra completions
fpath=($DOTFILES/shell/zsh-completions/src $DOTFILES/shell/zsh-completions-mine/ $fpath)
autoload -Uz compinit && compinit
source $DOTFILES/shell/oh-my-zsh-defaults/completion.zsh
source $DOTFILES/shell/oh-my-zsh-defaults/directories.zsh
source $DOTFILES/shell/oh-my-zsh-defaults/clipboard.zsh
source $DOTFILES/shell/oh-my-zsh-defaults/history.zsh
source $DOTFILES/shell/oh-my-zsh-defaults/keys.zsh


# Auto correct commands, with exceptions (from oh-my-zsh)
alias cp='nocorrect cp'
alias man='nocorrect man'
alias mkdir='nocorrect mkdir'
alias mv='nocorrect mv'
alias sudo='nocorrect sudo'
setopt correct
setopt correct_all

# Import colorscheme from 'wal' asynchronously
# &   # Run the process in the background.
# # ( ) # Hide shell job control messages.
(cat ~/.cache/wal/sequences &)

# # To add support for TTYs this line can be optionally added.
. ~/.cache/wal/colors-tty.sh


# Enable virtualenvwrapper if installed
if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
  export WORKON_HOME=$HOME/.config/virtualenvs
  export VIRTUALENVWRAPPER_PYTHON=`which python3`
  export VIRTUALENVWRAPPER_SCRIPT=/usr/local/bin/virtualenvwrapper.sh
  mkdir -p $WORKON_HOME
  source /usr/local/bin/virtualenvwrapper_lazy.sh
fi

# Powerlevel10k theme
source_if_exists ~/.p10k.zsh
source_if_exists $DOTFILES/shell/powerlevel10k/powerlevel10k.zsh-theme

# The 'z' command to jump around dirs
source_if_exists $DOTFILES/shell/z/z.sh

# FZF for fuzzy finding
source_if_exists ~/.fzf.zsh

# Ruby bundler plugin, automatically runs binstub in .bin or `bundle exec`s
source_if_exists $DOTFILES/shell/zsh-plugins/bundler.plugin.zsh
source_if_exists $DOTFILES/shell/zsh-plugins/gitignore.plugin.zsh

# Enable custom aliases and functions
source_if_exists "$DOTFILES/shell/aliases"
source_if_exists "$DOTFILES/shell/functions"

insert-arg-of-prev-cmd() {
: ${NUMERIC:-1}
(( NUMERIC++ ))
words=($(fc -ln -1))
RBUFFER+="$words[$NUMERIC] "
zle end-of-line
}
zle -N insert-arg-of-prev-cmd
bindkey "\e^y" insert-arg-of-prev-cmd

bindkey '\e#' pound-insert
bindkey '^]' vi-find-next-char
bindkey '^\e]' vi-find-prev-char

# Use lf to switch directories and bind it to ctrl-o
lfcd () {
  if ! command -v lf &>/dev/null; then echo "lf not installed." && return; fi
  tmp="$(mktemp)"
  lf -last-dir-path="$tmp" "$@"
  if [ -f "$tmp" ]; then
    dir="$(cat "$tmp")"
    rm -f "$tmp"
    [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
  fi
}
bindkey -s '^o' '^ulfcd\n'

_zsh_cli_fg() { fg; }
zle -N _zsh_cli_fg
bindkey '^Z' _zsh_cli_fg

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

source_if_exists $DOTFILES/shell/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
