#!/bin/sh
PARAMS=""
while [ $(($#)) -ne 0 ]; do
  case "$1" in
    -g|-j|-gj)
      background=1
      shift
      ;;
    -a)
      app="$2"
      shift 2
      ;;
    -h|--help)
      echo "Usage:"
      echo "open [-g] file"
      exit 0
      ;;
    --) # end arg parsing
      shift
      break
      ;;
    -*) # unsupported flags
      echo "Unsupported flag $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      { [ -z "$PARAMS" ] && PARAMS="$(printf '%q' "$1")"; }|| PARAMS="$PARAMS $(printf '%q' "$1")"
      shift
      ;;
  esac
done
eval set -- "$PARAMS"

background=${background:-0}
os=$(uname -s | tr '[:upper:]' '[:lower:]')

case "$os" in
  linux*)
    # not sure how backgrounding is handled with xdg-open
    command xdg-open "$@"
    ;;
  darwin*)
    if [ $background -eq 1 ]; then /usr/bin/open -gj "$@"
    elif [ -n "$app" ]; then /usr/bin/open -a "$app" "$@"
    else /usr/bin/open "$@"
    fi
    ;;
  msys*|cygwin*|mingw*|nt|win*)
    printf "Windows not supported yet.\n"
    ;;
  *)
    printf "Operating system %s not supported yet.\n" "$os"
    ;;
esac
