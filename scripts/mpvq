#!/bin/sh
if ! [ -S "$HOME"/.cache/mpv/input ]; then
    mkfifo "$HOME"/.cache/mpv/input
fi

# queue the video
play() {
  if pgrep -f MPV-Q > /dev/null; then
    # TODO: unfortunate dependency on `nc`, try to find a way to send text to socket without dependencies
    printf "loadfile \"%s\" append-play\n" "$1" | nc -U "$HOME"/.cache/mpv/input
    terminal-notifier -title "Video queued" -message "Added to queue successfully" -group "mpv" 1>/dev/null 2>&1
  else
    terminal-notifier -title "Playing video" -message "MPV is launching..." -group "mpv" 1>/dev/null 2>&1
    # This converts FIFO to a domain socket
    mpv --idle=yes --volume=50 --no-terminal --x11-name=MPV-Q --input-ipc-server="$HOME"/.cache/mpv/input --log-file="$HOME"/.cache/mpv/mpv.log --player-operation-mode=pseudo-gui "$1" &
  fi
}

# link archive
arc(){
  title=$(youtube-dl --ignore-config --get-title "$1" 2>/dev/null)
  printf "%b\n" "$title\t$1" >> "$HOME/.cache/mpv/linkarchive"
}

if ! [ -t 0 ]; then
  while read -r l; do
    entered_read=1
    play "$l"
    arc "$l" &
  done
  [ -n "$entered_read" ] && exit 0
fi

[ $# -eq 0 ] && printf "Links expected as arguments or stdin; none provided.\n" && exit 1
for l in "$@"; do
  play "$l"
  arc "$1" &
done
exit 0
