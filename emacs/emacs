;; SML mode
(setq load-path (cons "/Users/alex/.emacs.d/sml-mode-5.0" load-path))
(load "sml-mode-startup")
(setenv "PATH" (concat "/usr/local/smlnj-110.73/bin:" (getenv "PATH")))
(setq exec-path (cons "/usr/local/smlnj-110.73/bin"  exec-path))

;; Set the shell
(setq-default explicit-shell-file-name "/bin/bash")

;; Set themes
(add-to-list 'custom-theme-load-path "~/.emacs.d/themes")
(load-theme 'cyberpunk t)

;; Let me press 'y'/'n' to answer yes-or-no questions
(fset 'yes-or-no-p 'y-or-n-p)

;; Show matching parens
(show-paren-mode 1)

;; Fuzzy file matching
(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)

;; Keep all backup files in ~/.emacs.d/backup
(setq backup-directory-alist
      `(("." . ,(concat user-emacs-directory "backup/")))
      tramp-backup-directory-alist backup-directory-alist)

;; Add package repositories
(require 'package)
(add-to-list 'package-archives
  '("melpa-stable" . "http://stable.melpa.org/packages/") t)
(package-initialize)

;; Some version control for backups
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#242424" "#e5786d" "#95e454" "#cae682" "#8ac6f2" "#333366" "#ccaa8f" "#f6f3e8"])
 '(blink-cursor-mode t)
 '(blink-matching-paren t)
 '(custom-safe-themes
   (quote
    ("1a232652b04b68380b1cff7ceeb62787b4eb43df826a97c67831c50b0c0d1451" "3fd57a3dc99eb0e2ec438555cf801572f649c79513d3a8da7980ab54cf66121b" default)))
 '(package-selected-packages (quote (haskell-mode)))
 '(version-control t)
 '(xterm-mouse-mode t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(menu ((t (:background "red" :inverse-video nil :slant italic))))
 '(tty-menu-disabled-face ((t (:background "color-238" :foreground "color-16"))))
 '(tty-menu-enabled-face ((t (:background "red" :foreground "white" :weight bold))))
 '(tty-menu-selected-face ((t (:background "magenta" :foreground "white")))))

